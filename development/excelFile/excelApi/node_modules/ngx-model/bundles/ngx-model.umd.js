(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ngx-model', ['exports', 'rxjs', 'rxjs/operators', '@angular/core'], factory) :
    (factory((global['ngx-model'] = {}),global.rxjs,global.Rx.Observable.prototype,global.ng.core));
}(this, (function (exports,rxjs,operators,core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    /**
     * @template T
     */
    var Model = (function () {
        /**
         * @param {?} initialData
         * @param {?} immutable
         * @param {?} sharedSubscription
         * @param {?=} clone
         */
        function Model(initialData, immutable, sharedSubscription, clone) {
            this._data = new rxjs.BehaviorSubject(initialData);
            this.data$ = this._data
                .asObservable()
                .pipe(operators.map(function (data) {
                return immutable
                    ? clone
                        ? clone(data)
                        : JSON.parse(JSON.stringify(data))
                    : data;
            }), sharedSubscription ? operators.shareReplay(1) : operators.map(function (data) { return data; }));
        }
        /**
         * @return {?}
         */
        Model.prototype.get = function () {
            return this._data.getValue();
        };
        /**
         * @param {?} data
         * @return {?}
         */
        Model.prototype.set = function (data) {
            this._data.next(data);
        };
        return Model;
    }());
    /**
     * @template T
     */
    var ModelFactory = (function () {
        function ModelFactory() {
        }
        /**
         * @param {?} initialData
         * @return {?}
         */
        ModelFactory.prototype.create = function (initialData) {
            return new Model(initialData, true, false);
        };
        /**
         * @param {?} initialData
         * @return {?}
         */
        ModelFactory.prototype.createMutable = function (initialData) {
            return new Model(initialData, false, false);
        };
        /**
         * @param {?} initialData
         * @return {?}
         */
        ModelFactory.prototype.createMutableWithSharedSubscription = function (initialData) {
            return new Model(initialData, false, true);
        };
        /**
         * @param {?} initialData
         * @param {?} clone
         * @return {?}
         */
        ModelFactory.prototype.createWithCustomClone = function (initialData, clone) {
            return new Model(initialData, true, false, clone);
        };
        return ModelFactory;
    }());
    /**
     * @return {?}
     */
    function useModelFactory() {
        return new ModelFactory();
    }
    var /** @type {?} */ MODEL_PROVIDER = {
        provide: ModelFactory,
        useFactory: useModelFactory
    };
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxModelModule = (function () {
        function NgxModelModule() {
        }
        return NgxModelModule;
    }());
    NgxModelModule.decorators = [
        { type: core.NgModule, args: [{
                    providers: [MODEL_PROVIDER]
                },] },
    ];

    exports.NgxModelModule = NgxModelModule;
    exports.Model = Model;
    exports.ModelFactory = ModelFactory;
    exports.useModelFactory = useModelFactory;
    exports.MODEL_PROVIDER = MODEL_PROVIDER;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-model.umd.js.map
