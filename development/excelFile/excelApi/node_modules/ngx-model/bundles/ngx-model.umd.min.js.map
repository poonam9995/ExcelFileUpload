{
  "version": 3,
  "file": "ngx-model.umd.min.js",
  "sources": [
    "ng://ngx-model/lib/model.ts",
    "ng://ngx-model/lib/index.ts"
  ],
  "sourcesContent": [
    "import { Observable, BehaviorSubject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nexport class Model<T> {\n  private _data: BehaviorSubject<T>;\n\n  data$: Observable<T>;\n\n  constructor(\n    initialData: any,\n    immutable: boolean,\n    sharedSubscription: boolean,\n    clone?: (data: T) => T\n  ) {\n    this._data = new BehaviorSubject(initialData);\n    this.data$ = this._data\n      .asObservable()\n      .pipe(\n        map(\n          (data: T) =>\n            immutable\n              ? clone\n                ? clone(data)\n                : JSON.parse(JSON.stringify(data))\n              : data\n        ),\n        sharedSubscription ? shareReplay(1) : map((data: T) => data)\n      );\n  }\n\n  get(): T {\n    return this._data.getValue();\n  }\n\n  set(data: T) {\n    this._data.next(data);\n  }\n}\n\nexport class ModelFactory<T> {\n  create(initialData: T): Model<T> {\n    return new Model<T>(initialData, true, false);\n  }\n\n  createMutable(initialData: T): Model<T> {\n    return new Model<T>(initialData, false, false);\n  }\n\n  createMutableWithSharedSubscription(initialData: T): Model<T> {\n    return new Model<T>(initialData, false, true);\n  }\n\n  createWithCustomClone(initialData: T, clone: (data: T) => T) {\n    return new Model<T>(initialData, true, false, clone);\n  }\n}\n\nexport function useModelFactory() {\n  return new ModelFactory();\n}\n\nexport const MODEL_PROVIDER = {\n  provide: ModelFactory,\n  useFactory: useModelFactory\n};\n",
    "import { NgModule } from '@angular/core';\nimport { MODEL_PROVIDER } from './model';\n\nexport * from './model';\n\n@NgModule({\n  providers: [MODEL_PROVIDER]\n})\nexport class NgxModelModule {}\n"
  ],
  "names": [
    "Model",
    "initialData",
    "immutable",
    "sharedSubscription",
    "clone",
    "this",
    "_data",
    "BehaviorSubject",
    "data$",
    "asObservable",
    "pipe",
    "map",
    "data",
    "JSON",
    "parse",
    "stringify",
    "shareReplay",
    "prototype",
    "get",
    "getValue",
    "set",
    "next",
    "ModelFactory",
    "useModelFactory",
    "NgxModelModule"
  ],
  "mappings": "uWAGA,IAAAA,EAAA,WAKE,SAAAA,EAAFC,EAAAC,EAAAC,EAAAC,GAMIC,KAAKC,MAAQ,IAAIC,EAAAA,gBAAgBN,GACjCI,KAAKG,MAAQH,KAAKC,MACfG,eACAC,KACCC,EAAAA,IACE,SACEC,GAHZ,OAAAV,EAIgBE,EACEA,EAAMQ,GACNC,KAAKC,MAAMD,KAAKE,UAAUH,IAC5BA,IAAhBT,EAAAa,EAAAA,YAE4C,GAAKL,EAAAA,IAFjD,SAAAC,GAAA,OAAAA,KAaA,OAPEZ,EAAFiB,UAAAC,IAAA,WACI,OAAOb,KAAKC,MAAMa,YAGpBnB,EAAFiB,UAAAG,IAAA,SAAAR,GACIP,KAAKC,MAAMe,KAAKT,IAEpBZ,EAlCA,8BAsDA,sRAAAsB,KAOA,SAAAC,gDCxDAC,eADAA"
}
